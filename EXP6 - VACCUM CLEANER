import random

class VacuumCleaner:
    def __init__(self):
        self.position = (0, 0)  # Starting position
        self.cleaned = [[False, False, False],
                        [False, False, False],
                        [False, False, False]]  # Grid with dirt (False) and cleaned (True)

    def move_left(self):
        if self.position[1] > 0:
            self.position = (self.position[0], self.position[1] - 1)

    def move_right(self):
        if self.position[1] < 2:
            self.position = (self.position[0], self.position[1] + 1)

    def move_up(self):
        if self.position[0] > 0:
            self.position = (self.position[0] - 1, self.position[1])

    def move_down(self):
        if self.position[0] < 2:
            self.position = (self.position[0] + 1, self.position[1])

    def clean(self):
        self.cleaned[self.position[0]][self.position[1]] = True

    def is_dirty(self):
        return not self.cleaned[self.position[0]][self.position[1]]

    def perceive(self):
        if self.is_dirty():
            return "dirty"
        else:
            return "clean"

    def move_random(self):
        possible_moves = []
        if self.position[1] > 0:
            possible_moves.append(self.move_left)
        if self.position[1] < 2:
            possible_moves.append(self.move_right)
        if self.position[0] > 0:
            possible_moves.append(self.move_up)
        if self.position[0] < 2:
            possible_moves.append(self.move_down)

        if possible_moves:
            random.choice(possible_moves)()

    def run_cleaning_cycle(self):
        steps = 0
        while steps < 10:  # Run for 10 steps
            print(f"Step {steps + 1}: Current position: {self.position}, Perception: {self.perceive()}")
            if self.perceive() == "dirty":
                print("Perceived dirt, cleaning...")
                self.clean()
            else:
                print("No dirt detected.")

            # Move to a random adjacent cell
            self.move_random()

            print("Grid after move:")
            self.print_grid()
            print("\n-------------------\n")
            steps += 1

    def print_grid(self):
        for row in self.cleaned:
            for cell in row:
                if cell:
                    print("C", end=" ")  # Cleaned
                else:
                    print("D", end=" ")  # Dirty
            print()

if __name__ == "__main__":
    cleaner = VacuumCleaner()
    cleaner.run_cleaning_cycle()
